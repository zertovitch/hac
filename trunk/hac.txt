HAC - HAC Ada Compiler
======================

Alternative names: Hacker's Ada Compiler, Hello-world Ada Compiler

HAC is perhaps the first open-source (albeit very partial) Ada
compiler and virtual machine interpreter fully programmed in Ada itself.

Objectives
==========
 - fun!
 - produce the smallest Hello-world executable!
 - have a quick compiler
 - be useful for small Ada sandboxed prototypes

What HAC will most probably never be
====================================
 - a real, serious Ada compiler - there are enough serious ones!
 - a complete compiler - only a subset is covered

Warning & legal
===============
There is NO WARRANTY in this software.
Read copyright notice and license in hac.ads

Getting started
===============
Assuming you have the GNAT compiler installed, do the
following from a command line interpreter:

gnatmake -P hac
cd hac_exm
..\hac_test hello.adb
..\hac_test test.adb

NB: the Windows script t.cmd does the same.
You can test HAC on any other example (*.adb files in the hac_exm directory).
As a bonus, you can build some examples with GNAT to compare the output.
You can do it easily with the hac_exm.gpr project file.
Since hac_exm.gpr is a text file, you can see there the progress
(or the lack thereof) in the pieces of Ada code that are really
working with HAC. See the "Bugs" section below as well.

Some design points
==================
- HAC reads Ada sources from any stream. In addition to files, it is able
    to read from Zip archive (plan is to have sets with many sources like
    libraries in Zip files, for instance), from an internet stream, from
    an editor buffer (see the LEA project), from a source stored in memory,
    etc.
- One goal is to complement or challenge GNAT, for instance in terms of
    compilation speed, or run-time performance of certain portions of code,
    or object code compactness, or useability on certain targets. This will
    require compiling on other targets than p-code, that is real machine code
    for various platforms.

Bugs
====
You need to assume that almost nothing works with HAC.
There is a very short list of small programs that are working (in
the meaning: the compilation succeeds and the execution gives
a correct output). They are listed in the project file hac_exm.gpr
in the directory hac_exm. You will see that the "Pascal subset" is
more or less supported, so you have things like subprograms, including
nested subprograms, recursive subprograms, simple expressions working,
for instance.

History
=======

- 2013: January 24th: Day One of HAC: Hello World, Fibonacci
          and other tests work!
- 2009: a bit further trying to make it work (P2Ada was improved on the way,
          for WITH statements and modularity)...
- 1999: automatic translation of Mac Pascal sources to Ada, using P2Ada
- 1989: SmallAda is derived from CoPascal; works only inside
          very system-dependent environments (a Mac GUI, a DOS GUI)
- 1986: CoPascal (Schoening)
- 1970: Pascal-S (Wirth)

  Authors of SmallAda (in Pascal):
    1990 Manuel A. Perez               Macintosh version
    1990 Arthur V. Lopes               integrated environment for IBM-PC
    1989 Arthur V. Lopes               window-oriented monitoring for IBM-PC
    1988 Stuart Cramer and Jay Kurtz   refinement of tasking model
    1987 Frederick C. Hathorn          conversion of CoPascal

  Author of CoPascal (derived from Pascal-S by Niklaus Wirth)
    1986 Charles Schoening
 